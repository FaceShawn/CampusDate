<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.5.6.RELEASE</version>
  </parent>
  <groupId>com.campusdate</groupId>
  <artifactId>campus-date-web</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>spring-boot-campus-date</name>
  <url>https://maven.apache.org</url>
  <description>A springboot project to study maven.</description>

  <properties>
    <java.version>1.8</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <commons.lang.version>2.6</commons.lang.version>
    <gson.version>2.5</gson.version>
    <junit>3.8.1</junit>
  </properties>

  <dependencies>
  	<!-- web项目启动模块 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- 支持通过JDBC连接数据库  -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>

    <!-- Spring Data JPA 数据访问层(DAO)的解决方案，管理module -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <!-- 热部署 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <scope>test</scope>
      </dependency>

<!--    <dependency>-->
<!--      <groupId>org.springframework.session</groupId>-->
<!--      <artifactId>spring-session-core</artifactId>-->
<!--    </dependency>-->

    <!--  MyBatis  -->
    <dependency>
      <groupId>org.mybatis.spring.boot</groupId>
      <artifactId>mybatis-spring-boot-starter</artifactId>
      <version>1.2.0</version>
    </dependency>

    <!-- MySQL数据库连接驱动-->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>

    <!-- alibaba druid数据库连接池 -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>1.0.25</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version> 5.2.1.Final</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <version>5.2.17.Final</version>
    </dependency>

    <!-- Java 6 = JAX-B Version 2.0   -->
    <!-- Java 7 = JAX-B Version 2.2.3 -->
    <!-- Java 8 = JAX-B Version 2.2.8 -->
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>2.3.0</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>2.3.0</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-core</artifactId>
        <version>2.3.0</version>
      </dependency>
      <dependency>
        <groupId>javax.activation</groupId>
        <artifactId>activation</artifactId>
        <version>1.1.1</version>
      </dependency>

    <!-- Gson -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>${gson.version}</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
<!--      <version>${junit.version}</version>-->
      <scope>test</scope>
    </dependency>

    <!-- JaCoCo 代码覆盖率插件 -->
    <dependency>
      <groupId>org.jacoco</groupId>
      <artifactId>jacoco-maven-plugin</artifactId>
      <version>0.8.5</version>
    </dependency>

<!--    Swagger，生成API文档-->
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>2.2.2</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>2.2.2</version>
    </dependency>

<!--    <dependency>-->
<!--      <groupId>org.projectlombok</groupId>-->
<!--      <artifactId>lombok</artifactId>-->
<!--    </dependency>-->

  </dependencies>

  <build>
    <finalName>spring-boot-campus</finalName>
    <plugins>
<!--      <plugin>-->
<!--        <groupId>org.springframework.boot</groupId>-->
<!--        <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--      </plugin>-->
<!--      <plugin>-->
<!--        <artifactId>maven-compiler-plugin</artifactId>-->
<!--        <version>2.3.2</version>-->
<!--        <configuration>-->
<!--          <source>1.6</source>-->
<!--          <target>1.6</target>-->
<!--          <encoding>UTF-8</encoding>-->
<!--        </configuration>-->
<!--      </plugin>-->

<!--      <plugin>-->
<!--        <groupId>org.apache.maven.plugins</groupId>-->
<!--        <artifactId>maven-compiler-plugin</artifactId>-->
<!--      </plugin>-->
<!--      <plugin>-->
<!--        <artifactId>maven-surefire-plugin</artifactId>-->
<!--      </plugin>-->
<!--      <plugin>-->
<!--        <artifactId>maven-failsafe-plugin</artifactId>-->
<!--      </plugin>-->

      <!--   JaCoCo   -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.7</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>

            <configuration>
              <!--定义输出的文件夹-->
              <outputDirectory>target/jacoco-report</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- cobertura -->
<!--      <plugin>-->
<!--        <groupId>org.codehaus.mojo</groupId>-->
<!--        <artifactId>cobertura-maven-plugin</artifactId>-->
<!--      </plugin>-->

    </plugins>
  </build>
</project>